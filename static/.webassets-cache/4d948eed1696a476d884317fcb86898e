V/** @jsx React.DOM */\u000a\u000aMR.Radar = function(obj){\u000a  this.name = obj.name;\u000a  this._weight = obj.weight;\u000a  this.children = [];\u000a  this.childOffsetWeight = (obj.children&&obj.children.length)?0:1;\u000a\u000a  this.startAg = 0;\u000a  this.endAg = Math.PI * 2;\u000a  this.weight = 0;\u000a  this.numOfChild = 0;\u000a\u000a  this.transformState = {};\u000a\u000a  this.updateTag = false;\u000a  for(var i in obj.children){\u000a    this.children.push(new MR.Radar(obj.children[i]));\u000a    this.numOfChild += this.children[i].numOfChild+1;\u000a  }\u000a  \u000a  this.transformTo('weight', MR.Radar.countWeightWithChildNum(this._weight, this.numOfChild), 1000);\u000a  // if(obj instanceof MR.radar){\u000a  //     this.\u000a  // }\u000a}\u000a\u000a// static var\u000aMR.Radar.CHILDFIX = 0.1;\u000a\u000aMR.Radar.tan3 = function(y, x){\u000a  // Turn the range of tan2 from [-PI,PI] to [0, 2*PI]\u000a  ag =  Math.atan2(y, x);\u000a  return ag<0?(ag+2*Math.PI):ag;\u000a}\u000a\u000aMR.Radar.inRange = function(a, v, b){\u000a  // Check if v is in [a, b]\u000a  var tmp;\u000a  if(a>b)tmp=a,a=b,b=tmp;\u000a  return a<=v&&v<=b;\u000a}\u000a\u000aMR.Radar.countWeightWithChildNum = function(_weight, numOfChild){\u000a  return _weight*(1+numOfChild*0.1);\u000a}\u000a\u000aMR.Radar.prototype.getWeight = function(){\u000a  return this.weight;\u000a}\u000a\u000aMR.Radar.prototype.appendChild = function(child){\u000a  console.log('append Child');\u000a  if(this.children.length === 0){\u000a    this.transformTo('childOffsetWeight', 0, 1000);\u000a  }\u000a  this.children.push(child);\u000a  this.updateTag = true;\u000a}\u000a\u000aMR.Radar.prototype.transformTo = function(name, value, ms){\u000a  if(typeof(name) == 'undefined' || typeof(value) != 'number')return false;\u000a  if(typeof(ms) == 'undefined')ms = 1;\u000a  if(name in this.transformState){\u000a    this[name] = this.transformState[name].end;\u000a  }\u000a  this.transformState[name] = {\u000a    stamp: window.performance.now(),\u000a    unit: (value - this[name])/ms,\u000a    end: value\u000a  }\u000a}\u000a\u000aMR.Radar.prototype.drawName = function(ctx, x, y, r, offsetR, isHover){\u000a  // Calculate the width of this component, and draw the name of this component.\u000a  // Calculate the width.\u000a  var fullR = offsetR+r, midR = offsetR+r/2, midAg = (this.startAg+this.endAg)/2,\u000a      X = [], textY = midR*Math.sin(midAg), tmp;\u000a  // big circle\u000a  tmp = Math.sqrt(fullR*fullR-textY*textY);\u000a  if(MR.Radar.inRange(this.startAg, MR.Radar.tan3(textY, tmp), this.endAg))X.push(tmp);\u000a  if(MR.Radar.inRange(this.startAg, MR.Radar.tan3(textY, -tmp), this.endAg))X.push(-tmp);\u000a  //small circle\u000a  if(offsetR*offsetR-textY*textY>=0){\u000a    tmp = Math.sqrt(offsetR*offsetR-textY*textY);\u000a    if(MR.Radar.inRange(this.startAg, MR.Radar.tan3(textY, tmp), this.endAg))X.push(tmp);\u000a    if(tmp!==0&&MR.Radar.inRange(this.startAg, MR.Radar.tan3(textY, -tmp), this.endAg))X.push(-tmp);\u000a  }\u000a  // startAg line and endAg line\u000a  if(Math.sin(this.startAg)*textY>0){\u000a    tmp = textY/Math.tan(this.startAg);\u000a    if(MR.Radar.inRange(offsetR, Math.sqrt(tmp*tmp+textY*textY), fullR))X.push(tmp);\u000a  }\u000a  if(Math.sin(this.endAg)*textY>0){\u000a    tmp = textY/Math.tan(this.endAg);\u000a    if(MR.Radar.inRange(offsetR, Math.sqrt(tmp*tmp+textY*textY), fullR))X.push(tmp);\u000a  }\u000a\u000a  // Find left and right dot\u000a  var l,r;\u000a  if(X.length>2){\u000a    var mi = 0, midx = midR*Math.cos(midAg);\u000a    for(var i in X){\u000a      if(Math.abs(X[i]-midx)<Math.abs(X[mi]-midx))mi=i;\u000a    }\u000a    l = X[mi];\u000a    X.splice(mi,1);\u000a    mi = 0;\u000a    for(var i in X){\u000a      if(Math.abs(X[i]-midx)<Math.abs(X[mi]-midx))mi=i;\u000a    }\u000a    r = X[mi];\u000a  }else{\u000a    l = X[0], r = X[1];\u000a  }\u000a  \u000a  // Draw the name.\u000a  ctx.font = 'bold 16px Arial,\u5fae\u8edf\u6b63\u9ed1\u9ad4';\u000a  ctx.textAlign = 'center';\u000a  ctx.textBaseline = 'middle';\u000a  ctx.fillStyle = 'hsl('+((this.startAg+this.endAg)*90/Math.PI+180)+', 80%, '+(isHover?20:50)+'%)';\u000a  var pstr = this.name, len = this.name.length, textWidth = Math.abs(l-r);\u000a  while(len>=0&&ctx.measureText(pstr).width>textWidth){\u000a    len -= 1;\u000a    pstr = this.name.substring(0,len)+'...';\u000a  }\u000a  ctx.fillText(pstr, x+(l+r)/2, y+textY, textWidth);\u000a}\u000a\u000aMR.Radar.prototype.renderComponent = function(ctx, x, y, r, offsetR, isHover){\u000a  var fullR = r + offsetR;\u000a  ctx.beginPath();\u000a  if(offsetR === 0){\u000a    ctx.arc(x, y, r, 0, Math.PI*2,false);\u000a  }else{\u000a    ctx.moveTo(x+offsetR*Math.cos(this.startAg), y+offsetR*Math.sin(this.startAg));\u000a    ctx.lineTo(x+fullR*Math.cos(this.startAg), y+fullR*Math.sin(this.startAg));\u000a    ctx.arc(x, y, fullR, this.startAg, this.endAg, false);\u000a    ctx.lineTo(x+offsetR*Math.cos(this.endAg), y+offsetR*Math.sin(this.endAg));\u000a    ctx.arc(x, y, offsetR, this.endAg, this.startAg, true);\u000a  }\u000a  ctx.fillStyle = 'hsl('+((this.startAg+this.endAg)*90/Math.PI)+', 80%, '+(isHover?90:50)+'%)';\u000a  ctx.fill();\u000a  // ctx.strokeStyle = 'hsl('+((this.startAg+this.endAg)*180/Math.PI)+', 100%, 25%)';\u000a  ctx.stroke();\u000a\u000a  // Text - Name\u000a  this.drawName(ctx, x, y, r, offsetR, isHover);\u000a}\u000a\u000aMR.Radar.prototype.renderChildren = function(ctx, x, y, r, offsetR, mouseHovorRadar){\u000a  // Setting children's startAg and endAg\u000a  var sumWeight = this.childOffsetWeight;\u000a  for(var i in this.children){\u000a    sumWeight += this.children[i].getWeight();\u000a  }\u000a  var unitAg = (this.endAg - this.startAg) / sumWeight;\u000a  var startAg = this.startAg;\u000a  for(var i in this.children){\u000a    this.children[i].startAg = startAg;\u000a    if(i===this.children.length-1 && this.childOffsetWeight===0){\u000a      this.children[i].endAg = this.endAg;\u000a    }else{\u000a      startAg += unitAg*this.children[i].getWeight();\u000a      this.children[i].endAg = startAg;\u000a    }\u000a    this.children[i].render(ctx, x, y, r, offsetR+r, mouseHovorRadar);\u000a  }\u000a}\u000a\u000aMR.Radar.prototype.render = function(ctx, x, y, r, offsetR, mouseHovorRadar){\u000a  this.renderComponent(ctx, x, y, r, offsetR, mouseHovorRadar===this);\u000a  this.renderChildren(ctx, x, y, r, offsetR, mouseHovorRadar);\u000a}\u000a\u000aMR.Radar.prototype.updateComponent = function(){\u000a  if(this.updateTag){\u000a    this.numOfChild = this.children.length;\u000a    for(var i in this.children){\u000a      this.numOfChild += this.children[i].numOfChild;\u000a    }\u000a    this.transformTo('weight', MR.Radar.countWeightWithChildNum(this._weight, this.numOfChild), 1000);\u000a    this.updateTag = false;\u000a  }\u000a  \u000a  // Update transformState\u000a  for(var v in this.transformState){\u000a    var times = window.performance.now()-this.transformState[v].stamp;\u000a    this[v] += this.transformState[v].unit*times;\u000a    if(this.transformState[v].unit>0&&this[v]>=this.transformState[v].end||\u000a      this.transformState[v].unit<0&&this[v]<=this.transformState[v].end){\u000a      this[v] = this.transformState[v].end;\u000a      delete this.transformState[v];\u000a    }\u000a  }\u000a}\u000a\u000aMR.Radar.prototype.updateChildren = function(){\u000a  var tag = false;\u000a  for(var i in this.children){\u000a    tag |= this.children[i].update();\u000a  }\u000a  return tag;\u000a}\u000a\u000aMR.Radar.prototype.update = function(){\u000a  var tag = this.updateTag;\u000a  if(this.updateChildren()){\u000a    tag = this.updateTag = true;\u000a  }\u000a  this.updateComponent();\u000a  return tag;\u000a}\u000a
p1
.