V/** @jsx React.DOM */\u000aconst MR = {}\u000a\u000awindow.performance = window.performance || {};\u000aperformance.now = (function() {\u000a  return performance.now       ||\u000a         performance.mozNow    ||\u000a         performance.msNow     ||\u000a         performance.oNow      ||\u000a         performance.webkitNow ||\u000a         function() { return new Date().getTime(); };\u000a})();\u000a\u000a\u000aSC.App = React.createClass({displayName: 'App',\u000a  mixins: [RMR.RouterMixin],\u000a  routes: {\u000a    '/': 'indexHandler',\u000a    '/login': 'loginHandler',\u000a    '/logout': 'logoutHandler',\u000a  },\u000a  ajax: function(url,method,data,callback){\u000a    console.log('AJAX TO URL:'+url);\u000a    var xhr = new XMLHttpRequest();\u000a    xhr.open(method, url, true);\u000a    this.setState({loading:15});\u000a    xhr.onreadystatechange = function(){\u000a      if(xhr.readyState==4){\u000a        console.log('AJAX END');\u000a        if(xhr.status){\u000a          this.setState({status:xhr.status});\u000a        }\u000a        setTimeout(function(){this.setState({loading:-1});}.bind(this), 1000);\u000a        if(xhr.status==200){\u000a          callback(JSON.parse(xhr.response));\u000a        }\u000a      }\u000a    }.bind(this);\u000a    xhr.onprogress = function(e){\u000a      if(e.lengthComputable){\u000a        console.log('AJAX:'+e.loaded*100 / e.total+'%');\u000a        this.setState({loading: e.loaded*100 / e.total});\u000a      }\u000a    }.bind(this);\u000a    xhr.onerror = function(){\u000a      this.setState({status: 500});\u000a    };\u000a    xhr.send(data);\u000a  },\u000a  getInitialState: function() {\u000a    return {\u000a      loading: -1,\u000a      status: 200,\u000a      current_user: this.props.current_user\u000a    };\u000a  },\u000a  componentDidMount: function(){\u000a    // $.material.init();\u000a  },\u000a  componentWillUpdate: function(){\u000a    if(this.state.url!=window.location.pathname+window.location.search){\u000a      this.setState({url:window.location.pathname+window.location.search,status:200});\u000a    }\u000a  },\u000a  setCurrentUser: function(current_user){\u000a    this.setState({current_user:current_user});\u000a  },\u000a  render: function() {\u000a    var getPage = function(){\u000a      if(this.state.status===200){\u000a        return this.renderCurrentRoute();\u000a      }else{\u000a        return React.createElement(SC.ErrorPage, {errorCode: this.state.status});\u000a      }\u000a    }.bind(this);\u000a    var progressBar = function(){\u000a      if(this.state.loading>=0){\u000a        return (\u000a          React.createElement(RB.ProgressBar, {now: this.state.loading, bsStyle: "danger", \u000a            style: {position:'fixed',top:'0px',height:'6px',width:'100%',zIndex:100}})\u000a        );\u000a      }\u000a    }.bind(this);\u000a    return (\u000a      React.createElement("div", null, \u000a        progressBar(), \u000a        React.createElement(SC.NavbarInstance, {name: this.props.name, current_user: this.state.current_user, url: this.state.url}), \u000a        getPage()\u000a      )\u000a    );\u000a  },\u000a\u000a  toInt: function(s, defaultValue){\u000a    return parseInt(s)?parseInt(s):defaultValue;\u000a  },\u000a\u000a  // indexHandler: function() {\u000a  //   return <SC.RedirectPage url='/announce' />;\u000a  // },\u000a  // loginHandler: function(params) {\u000a  //   params = SC.makeOtherArray(['',], params);\u000a  //   return <SC.LoginPage ajax={this.ajax} next={params.next} setCurrentUser={this.setCurrentUser}/>;\u000a  // },\u000a  // logoutHandler: function() {\u000a  //   return <SC.LogoutPage ajax={this.ajax} setCurrentUser={this.setCurrentUser}/>;\u000a  // },\u000a\u000a\u000a  // Else\u000a  notFound: function(path) {\u000a      return React.createElement(SC.ErrorPage, {errorCode: "404"});\u000a  },\u000a});\u000a\u000a\u000aSC.RedirectPage = React.createClass({displayName: 'RedirectPage',\u000a  componentDidMount: function(){\u000a    console.log('Redirect to '+this.props.url);\u000a    SC.Redirect(this.props.url);\u000a  },\u000a  render: function() {\u000a    return (\u000a      React.createElement("div", null)\u000a    );\u000a  }\u000a});\u000a
p1
.